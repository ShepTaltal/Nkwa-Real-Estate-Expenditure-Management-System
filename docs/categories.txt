2.Category Management

Objective:
-Manage list of unique expenditure categories like "Cement", "TV Adverts"
-Use HashSet to ensure uniqueness
-Allow category lookup

The provided Java code implements a simple console application for managing categories using a `HashSet`. This application allows users to add categories, view all categories, and search for a specific category. Below is a breakdown of the code and its functionality:

 Code Breakdown

1. CategoryManager Class:
   - This is the main class that contains the `main` method and the logic for managing categories.
   - It uses a `HashSet` to store unique category names, ensuring that no duplicates are allowed.

2. Main Menu:
   - The application runs in a loop, displaying a menu with options to add a category, view all categories, search for a category, or exit the application.
   - User input is handled using a `Scanner`.

3. Adding Categories:
   - The `addCategory` method prompts the user to enter a category name. It attempts to add the category to the `HashSet`. If the category is successfully added, a confirmation message is displayed; otherwise, a message indicating that the category already exists is shown.

4. Viewing Categories:
   - The `viewCategories` method iterates through the `HashSet` and prints all the categories stored.

5. Searching for a Category:
   - The `searchCategory` method allows the user to enter a category name to search for. It checks if the category exists in the `HashSet` and displays an appropriate message.

Example Usage

- Adding a Category:
  - The user is prompted to enter a category name. If the name is unique, it is added to the set, and a success message is displayed. If the name already exists, the user is informed.

- Viewing All Categories:
  - The user can view all categories by selecting the appropriate menu option. The application lists all categories currently stored in the set.

- Searching for a Category:
  - The user can search for a specific category by entering its name. The application checks for its existence and provides feedback.

 Potential Improvements

1. Input Validation:Implement checks to ensure that the category name is not empty or null before adding it to the set.
2. Data Persistence:Consider saving categories to a file or database so that they persist between application runs.
3. Enhanced User Interface: Improve the user interface for better usability, possibly by using a graphical user interface (GUI) instead of a console application.
4. Case Sensitivity:Modify the search functionality to be case-insensitive, allowing for more flexible category searches.

Conclusion

This Java application provides a basic framework for managing categories. It can be expanded and improved based on user needs and requirements. 
